/*
* This build file was auto generated by running 'gigawatt'
* @author Giuseppe Ricupero
* @date 13-09-2016 07.46
*/
// [plugins] section {{{
plugins {
	// to use the 'api' keyword in dependencies
	id 'java-library'
	// support for groovy
	id 'groovy'
	// awesome git tag / gradle version integration
	id 'pl.allegro.tech.build.axion-release' version '1.14.5'
	// publish on a maven-compatible repository
	id 'maven-publish'
}
// }}}

scmVersion {
	tag {
		prefix = 'release-'
	}
}

allprojects {
	targetCompatibility = JavaVersion.VERSION_1_8
}

// [general] configuration
project.with { // {{{
	//project.name is set in the settings.gradle with rootProject.name
	group 'it.italiaonline.rnd.filters'
	version scmVersion.version // '0.5.0' (remove -SNAPSHOT for releases)
	description 'This filter "Titlelize" Italian text'
} // }}}

repositories { // {{{
	mavenCentral()
} // }}}


dependencies { // {{{
	api (
		// Groovy language support
		'org.codehaus.groovy:groovy:3.0.22'
	)

	implementation (
		// Slf4j dependencies with log4j2 backend
		'org.slf4j:slf4j-api:2.0.12',
		// calculate Levenshtein distance
		'org.apache.commons:commons-text:1.11.0'
	)

	testImplementation (
		// We use the awesome Spock testing and specification framework
		"org.spockframework:spock-core:2.3-groovy-3.0"
	)
} // }}}

// use parallelization for tests
tasks.withType(Test) {
	useJUnitPlatform()
	maxParallelForks = Runtime.runtime.availableProcessors() / 2
}
task uniTest(type: Test) {
	description = 'unit tests task'
	exclude '**/*ISpec*'
	exclude '**/*FSpec*'
}
task intTest(type: Test) {
	description = 'integration tests task'
	exclude '**/*USpec*'
	exclude '**/*FSpec*'
}
task funTest(type: Test) {
	description = 'functional tests task'
	exclude '**/*USpec*'
	exclude '**/*ISpec*'
}
gradle.startParameter.excludedTaskNames += "uniTest"
gradle.startParameter.excludedTaskNames += "intTest"
gradle.startParameter.excludedTaskNames += "funTest"

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
// vim: ft=groovy:fdm=marker
